// Firestore security rules for PHRApp
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to create and read their own step records
    match /userSteps/{stepId} {
      // Create only if the userId in the new data matches the authenticated uid
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Read (get/list) only if the stored userId matches the authenticated uid
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // Update only if the stored userId matches the authenticated uid
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      // Prevent deletions
      allow delete: if false;
    }
    
    // userBadges コレクションへのアクセス制御
    match /userBadges/{badgeId} {
      // 作成: 認証済かつ userId フィールドが自分の UID と一致
      allow create: if request.auth != null
                    && request.auth.uid == request.resource.data.userId;
      // 読み取り: 認証済かつ保存済の userId が自分の UID と一致
      allow read:   if request.auth != null
                    && request.auth.uid == resource.data.userId;
      // 更新: 自分のバッジのみ許可
      allow update: if request.auth != null
                    && request.auth.uid == request.resource.data.userId;
      // 削除は禁止
      allow delete: if false;
    }

    // userSettings コレクションへのアクセス制御
    match /userSettings/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }

    // userLevel コレクションへのアクセス制御
    match /userLevel/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }

    // cachedLevel コレクションへのアクセス制御
    match /cachedLevel/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }

    // dailyBonuses コレクションへのアクセス制御
    match /dailyBonuses/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }
    

    // reminderSettings コレクションへのアクセス制御
    match /reminderSettings/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }
    
    // healthRiskSettings コレクションへのアクセス制御
    match /healthRiskSettings/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }
    
    // healthRisks コレクションへのアクセス制御
    match /healthRisks/{riskId} {
      // 作成: 認証済かつ userId フィールドが自分の UID と一致
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // 読み取り: 認証済かつ保存済の userId が自分の UID と一致
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // 更新: 認証済かつ保存済の userId が自分の UID と一致
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      // 削除は禁止
      allow delete: if false;
    }
    
    // userGoals コレクションへのアクセス制御
    match /userGoals/{goalId} {
      // 作成: 認証済かつ userId フィールドが自分の UID と一致
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // 読み取り: 認証済かつ保存済の userId が自分の UID と一致、または listDocuments などのクエリで自分のドキュメントを取得
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        request.query.limit <= 1000 && request.query.filters && request.query.filters.userId == request.auth.uid
      );
      // 更新: 認証済かつ保存済の userId が自分の UID と一致
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // 削除は禁止
      allow delete: if false;
    }
    
    // dailyCheckins コレクションへのアクセス制御
    match /dailyCheckins/{checkinId} {
      // 作成: 認証済かつ userId フィールドが自分の UID と一致
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // 読み取り: 認証済かつ保存済の userId が自分の UID と一致、または listDocuments などのクエリで自分のドキュメントを取得
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        request.query.limit <= 1000 && request.query.filters && request.query.filters.userId == request.auth.uid
      );
      // 更新: 認証済かつ保存済の userId が自分の UID と一致
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // 削除は禁止
      allow delete: if false;
    }

    // ユーザープロフィールと健康データへのアクセス制御
    match /users/{userId} {
      // 自分のプロフィールデータのみアクセス可能
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // 健康データのメトリクスアクセス制御
      match /health/metrics {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // AI会話履歴へのアクセス制御
      match /conversations/{conversationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // userProfile コレクションへのアクセス制御
    match /userProfile/{userId} {
      // 作成・読み取り・更新: 認証済かつドキュメントIDが自分のUIDと一致
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      // 削除は禁止
      allow delete: if false;
    }
  }
}
